name: Azure VM Deployment

on: workflow_dispatch

env:
  VM_NAME_VAR: ${{ vars.VM_NAME }}
  LOCATION_VAR: ${{ vars.LOCATION }}
  VM_SIZE: Standard_D2as_v4

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create resource group
      run: |
        az group create --name $VM_NAME_VAR --location $LOCATION_VAR

    - name: Create VM
      run: |
        az vm create \
          --resource-group $VM_NAME_VAR \
          --name $VM_NAME_VAR \
          --image Ubuntu2204 \
          --size $VM_SIZE \
          --admin-username ${{ secrets.SSH_USER }} \
          --admin-password ${{ secrets.SSH_PASSWORD }} \
          --public-ip-sku Standard \
          --public-ip-address-dns-name $VM_NAME_VAR \
          --public-ip-address-allocation static \
          --nsg-rule SSH

    - name: Open ports
      run: |
        az vm open-port --port 80 --priority 320 --resource-group $VM_NAME_VAR --name $VM_NAME_VAR
        az vm open-port --port 443 --priority 330 --resource-group $VM_NAME_VAR --name $VM_NAME_VAR
        az vm open-port --port 8000 --priority 340 --resource-group $VM_NAME_VAR --name $VM_NAME_VAR
        az vm open-port --port 8100 --priority 350 --resource-group $VM_NAME_VAR --name $VM_NAME_VAR
        az vm open-port --port 8080 --priority 360 --resource-group $VM_NAME_VAR --name $VM_NAME_VAR

    - name: Save VM IP to variable
      run: |
        echo "VM_IP=$(az vm show -d -g $VM_NAME_VAR -n $VM_NAME_VAR --query publicIps -o tsv)" >> $GITHUB_ENV

    - name: Show VM IP
      run: |
        echo "${{ env.VM_IP }}"

    - name: Create Azure Bot Service and Enable Teams Channel
      run: |
        az ad app create --display-name $VM_NAME_VAR --password $(grep 'MicrosoftAppPassword' ${{ secrets.ENVFILE }} | cut -d '=' -f2) --available-to-other-tenants true --reply-urls "https://token.botframework.com/.auth/web/redirect" --oauth2-allow-implicit-flow true
        APP_ID=$(az ad app list --display-name $VM_NAME_VAR --query [].appId -o tsv)
        az ad sp create --id $APP_ID
        TENANT_ID=$(az ad sp show --id $APP_ID --query appOwnerTenantId -o tsv)
        az bot create --kind registration --name $VM_NAME_VAR --resource-group $VM_NAME_VAR --sku S1 --location $LOCATION_VAR --appid $APP_ID --password $(grep 'MicrosoftAppPassword' ${{ secrets.ENVFILE }} | cut -d '=' -f2) --tenant-id $TENANT_ID
        az bot msteams create --name $VM_NAME_VAR --resource-group $VM_NAME_VAR --client-id $APP_ID --client-secret $(grep 'MicrosoftAppPassword' ${{ secrets.ENVFILE }} | cut -d '=' -f2) --tenant-id $TENANT_ID
        
    - name: Echo bot Teams link
      run: |
        echo "Teams link: https://teams.microsoft.com/l/chat/0/0?users=${{ env.VM_IP }}&topicName=${{ env.VM_NAME_VAR }}-bot"



